{{- if .Values.infrastructureServices.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "digitnxt.fullname" . }}-prometheus
  labels:
    {{- include "digitnxt.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.infrastructureServices.prometheus.replicas }}
  selector:
    matchLabels:
      {{- include "digitnxt.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "digitnxt.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      serviceAccountName: {{ include "digitnxt.serviceAccountName" . }}
      containers:
        - name: prometheus
          image: "{{ .Values.infrastructureServices.prometheus.image.repository }}:{{ .Values.infrastructureServices.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.infrastructureServices.prometheus.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.infrastructureServices.prometheus.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.infrastructureServices.prometheus.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: {{ include "digitnxt.configMapName" . }}-prometheus
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "digitnxt.pvcName" . }}-prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "digitnxt.fullname" . }}-prometheus
  labels:
    {{- include "digitnxt.labels" . | nindent 4 }}
spec:
  type: {{ .Values.infrastructureServices.prometheus.service.type }}
  ports:
    - port: {{ .Values.infrastructureServices.prometheus.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "digitnxt.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "digitnxt.configMapName" . }}-prometheus
  labels:
    {{- include "digitnxt.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:{{ .Values.infrastructureServices.prometheus.service.port }}']
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "digitnxt.pvcName" . }}-prometheus
  labels:
    {{- include "digitnxt.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.infrastructureServices.prometheus.persistence.size }}
  storageClassName: {{ .Values.global.storageClass }}
{{- end }} 